{"ast":null,"code":"var _jsxFileName = \"/Users/jinaldave/Projects/sorting-visualizer/src/SortingVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { bubbleSort, selectionSort, insertionSort, mergeSort, quickSort, heapSort, countingSort, radixSort, shellSort, cocktailShakerSort } from './SortingAlgorithms.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortingVisualizer = () => {\n  _s();\n  const [array, setArray] = useState([]);\n  const [arraySize, setArraySize] = useState(50);\n  const [speed, setSpeed] = useState(50);\n  const [isSorting, setIsSorting] = useState(false);\n  const [stats, setStats] = useState({\n    comparisons: 0,\n    swaps: 0\n  });\n\n  // Generate a random array of numbers\n  const generateArray = () => {\n    if (isSorting) return;\n    const newArray = Array.from({\n      length: arraySize\n    }, () => Math.floor(Math.random() * 100) + 1);\n    setArray(newArray);\n    setStats({\n      comparisons: 0,\n      swaps: 0\n    });\n  };\n\n  // Start the sorting process\n  const startSorting = async algorithm => {\n    if (isSorting) return;\n    setIsSorting(true);\n    setStats({\n      comparisons: 0,\n      swaps: 0\n    });\n    const delay = Math.max(1, 101 - speed); // Adjust delay based on speed\n    await algorithm([...array], setArray, setStats, delay);\n    setIsSorting(false);\n  };\n\n  // Define available algorithms\n  const algorithms = [{\n    name: 'Bubble Sort',\n    function: bubbleSort\n  }, {\n    name: 'Selection Sort',\n    function: selectionSort\n  }, {\n    name: 'Insertion Sort',\n    function: insertionSort\n  }, {\n    name: 'Merge Sort',\n    function: mergeSort\n  }, {\n    name: 'Quick Sort',\n    function: quickSort\n  }, {\n    name: 'Heap Sort',\n    function: heapSort\n  }, {\n    name: 'Counting Sort',\n    function: countingSort\n  }, {\n    name: 'Radix Sort',\n    function: radixSort\n  }, {\n    name: 'Shell Sort',\n    function: shellSort\n  }, {\n    name: 'Cocktail Shaker Sort',\n    function: cocktailShakerSort\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorting-visualizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sorting Algorithms Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateArray,\n        disabled: isSorting,\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"10\",\n        max: \"200\",\n        value: arraySize,\n        onChange: e => setArraySize(Number(e.target.value)),\n        disabled: isSorting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Array Size: \", arraySize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        value: speed,\n        onChange: e => setSpeed(Number(e.target.value)),\n        disabled: isSorting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Speed: \", speed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => startSorting(algorithms[e.target.value].function),\n        disabled: isSorting || array.length === 0,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), algorithms.map((algo, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: algo.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comparisons: \", stats.comparisons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Swaps: \", stats.swaps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: array.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          height: `${value * 4}px`,\n          width: `${500 / arraySize}px`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SortingVisualizer, \"CQCCblvFUxd2kSI3tVjwzNLa7Ao=\");\n_c = SortingVisualizer;\nexport default SortingVisualizer.js;\nvar _c;\n$RefreshReg$(_c, \"SortingVisualizer\");","map":{"version":3,"names":["React","useState","bubbleSort","selectionSort","insertionSort","mergeSort","quickSort","heapSort","countingSort","radixSort","shellSort","cocktailShakerSort","jsxDEV","_jsxDEV","SortingVisualizer","_s","array","setArray","arraySize","setArraySize","speed","setSpeed","isSorting","setIsSorting","stats","setStats","comparisons","swaps","generateArray","newArray","Array","from","length","Math","floor","random","startSorting","algorithm","delay","max","algorithms","name","function","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","min","value","onChange","e","Number","target","map","algo","index","style","height","width","_c","js","$RefreshReg$"],"sources":["/Users/jinaldave/Projects/sorting-visualizer/src/SortingVisualizer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  bubbleSort,\n  selectionSort,\n  insertionSort,\n  mergeSort,\n  quickSort,\n  heapSort,\n  countingSort,\n  radixSort,\n  shellSort,\n  cocktailShakerSort,\n} from './SortingAlgorithms.js';\n\nconst SortingVisualizer = () => {\n  const [array, setArray] = useState([]);\n  const [arraySize, setArraySize] = useState(50);\n  const [speed, setSpeed] = useState(50);\n  const [isSorting, setIsSorting] = useState(false);\n  const [stats, setStats] = useState({ comparisons: 0, swaps: 0 });\n\n  // Generate a random array of numbers\n  const generateArray = () => {\n    if (isSorting) return;\n    const newArray = Array.from({ length: arraySize }, () => Math.floor(Math.random() * 100) + 1);\n    setArray(newArray);\n    setStats({ comparisons: 0, swaps: 0 });\n  };\n\n  // Start the sorting process\n  const startSorting = async (algorithm) => {\n    if (isSorting) return;\n    setIsSorting(true);\n    setStats({ comparisons: 0, swaps: 0 });\n\n    const delay = Math.max(1, 101 - speed); // Adjust delay based on speed\n    await algorithm([...array], setArray, setStats, delay);\n\n    setIsSorting(false);\n  };\n\n  // Define available algorithms\n  const algorithms = [\n    { name: 'Bubble Sort', function: bubbleSort },\n    { name: 'Selection Sort', function: selectionSort },\n    { name: 'Insertion Sort', function: insertionSort },\n    { name: 'Merge Sort', function: mergeSort },\n    { name: 'Quick Sort', function: quickSort },\n    { name: 'Heap Sort', function: heapSort },\n    { name: 'Counting Sort', function: countingSort },\n    { name: 'Radix Sort', function: radixSort },\n    { name: 'Shell Sort', function: shellSort },\n    { name: 'Cocktail Shaker Sort', function: cocktailShakerSort },\n  ];\n\n  return (\n    <div className=\"sorting-visualizer\">\n      <h1>Sorting Algorithms Visualizer</h1>\n\n      {/* Controls */}\n      <div className=\"controls\">\n        <button onClick={generateArray} disabled={isSorting}>\n          Generate New Array\n        </button>\n        <input\n          type=\"range\"\n          min=\"10\"\n          max=\"200\"\n          value={arraySize}\n          onChange={(e) => setArraySize(Number(e.target.value))}\n          disabled={isSorting}\n        />\n        <label>Array Size: {arraySize}</label>\n\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"100\"\n          value={speed}\n          onChange={(e) => setSpeed(Number(e.target.value))}\n          disabled={isSorting}\n        />\n        <label>Speed: {speed}</label>\n\n        <select\n          onChange={(e) => startSorting(algorithms[e.target.value].function)}\n          disabled={isSorting || array.length === 0}\n        >\n          <option value=\"\">Select Algorithm</option>\n          {algorithms.map((algo, index) => (\n            <option key={index} value={index}>\n              {algo.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Stats */}\n      <div className=\"stats\">\n        <p>Comparisons: {stats.comparisons}</p>\n        <p>Swaps: {stats.swaps}</p>\n      </div>\n\n      {/* Visualization */}\n      <div className=\"array-container\">\n        {array.map((value, index) => (\n          <div\n            className=\"array-bar\"\n            key={index}\n            style={{\n              height: `${value * 4}px`,\n              width: `${500 / arraySize}px`,\n            }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer.js;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}